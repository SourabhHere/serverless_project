service: 
  auction-project

plugins:
  - serverless-bundle

variablesResolutionMode: 20210326

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  lambdaHashingVersion: 20201221
  environment:
    AUCTION_TABLE_NAME: ${self:custom.AuctionTable.name}
    MAIL_QUEUE_URL: ${self:custom.mailQueue.url}
  iamRoleStatements:
    - ${file(iam/auctionTableIAM.yaml):AuctionTableIAM}
    - ${file(iam/mailQueueIAM.yml):SQSQueueIAM}

resources:
  Resources:
    AuctionTable: ${file(resources/auctionTable.yaml):AuctionTable}
    
functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction  
          authorizer: ${self:custom.authorizer}

  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          authorizer: ${self:custom.authorizer}
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          authorizer: ${self:custom.authorizer}
  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: auction/{id}/bid
          authorizer: ${self:custom.authorizer}
  processAuctions:
    handler: src/handlers/processAuctions.handler
    # events:
    #   - schedule: rate(1 minute)

custom:
  authorizer: arn:aws:lambda:${aws:region}:${aws:accountId}:function:auth-service-${self:provider.stage}-auth
  AuctionTable:
    name: !Ref AuctionTable
    arn: !GetAtt AuctionTable.Arn
  mailQueue:
    arn: ${cf:notification-service-${self:provider.stage}.MailQueueArn}
    url: ${cf:notification-service-${self:provider.stage}.MailQueueUrl}
  bundle:
    linting: false